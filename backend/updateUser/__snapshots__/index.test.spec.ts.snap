// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PATCH /api/v1/user/:id trigger server error - close down database connection should match snapshot 1`] = `
Object {
  "done": [MockFunction] {
    "calls": Array [
      Array [],
    ],
    "results": Array [
      Object {
        "type": "return",
        "value": undefined,
      },
    ],
  },
  "log": [MockFunction],
  "res": Object {
    "body": "{\\"status\\":\\"error\\",\\"message\\":\\"Unable to reach database\\",\\"errorCode\\":2001}",
    "headers": Object {
      "Content-Type": "applicaiton/json",
    },
    "status": 503,
  },
}
`;

exports[`PATCH /api/v1/user/:id update an user should match snapshot 1`] = `
Object {
  "done": [MockFunction] {
    "calls": Array [
      Array [],
    ],
    "results": Array [
      Object {
        "type": "return",
        "value": undefined,
      },
    ],
  },
  "log": [MockFunction],
  "res": Object {
    "status": 204,
  },
}
`;

exports[`PATCH /api/v1/user/:id validation with empty body should match snapshot 1`] = `
Object {
  "done": [MockFunction] {
    "calls": Array [
      Array [],
    ],
    "results": Array [
      Object {
        "type": "return",
        "value": undefined,
      },
    ],
  },
  "log": [MockFunction],
  "res": Object {
    "body": "{\\"status\\":\\"failed\\",\\"message\\":\\"\\\\\\"value\\\\\\" must contain at least one of [permission, picture.large, picture.medium, picture.thumbnail, name.title, name.first, name.last]\\",\\"errorCode\\":2002}",
    "headers": Object {
      "Content-Type": "applicaiton/json",
    },
    "status": 400,
  },
}
`;

exports[`PATCH /api/v1/user/:id validation with forbidden fields only should match snapshot 1`] = `
Object {
  "done": [MockFunction] {
    "calls": Array [
      Array [],
    ],
    "results": Array [
      Object {
        "type": "return",
        "value": undefined,
      },
    ],
  },
  "log": [MockFunction],
  "res": Object {
    "body": "{\\"status\\":\\"failed\\",\\"message\\":\\"\\\\\\"value\\\\\\" must contain at least one of [permission, picture.large, picture.medium, picture.thumbnail, name.title, name.first, name.last]\\",\\"errorCode\\":2002}",
    "headers": Object {
      "Content-Type": "applicaiton/json",
    },
    "status": 400,
  },
}
`;

exports[`PATCH /api/v1/user/:id validation with invalid id should match snapshot 1`] = `
Object {
  "done": [MockFunction] {
    "calls": Array [
      Array [],
    ],
    "results": Array [
      Object {
        "type": "return",
        "value": undefined,
      },
    ],
  },
  "log": [MockFunction],
  "res": Object {
    "body": "{\\"status\\":\\"failed\\",\\"message\\":\\"\\\\\\"value\\\\\\" must contain at least one of [permission, picture.large, picture.medium, picture.thumbnail, name.title, name.first, name.last]\\",\\"errorCode\\":2002}",
    "headers": Object {
      "Content-Type": "applicaiton/json",
    },
    "status": 400,
  },
}
`;

exports[`PATCH /api/v1/user/:id validation with non existing _id should match snapshot 1`] = `
Object {
  "done": [MockFunction] {
    "calls": Array [
      Array [],
    ],
    "results": Array [
      Object {
        "type": "return",
        "value": undefined,
      },
    ],
  },
  "log": [MockFunction],
  "res": Object {
    "body": "{\\"status\\":\\"failed\\",\\"message\\":\\"Could not find requested resource.\\"}",
    "headers": Object {
      "Content-Type": "applicaiton/json",
    },
    "status": 404,
  },
}
`;
